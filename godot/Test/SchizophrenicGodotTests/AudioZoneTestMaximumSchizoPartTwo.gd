extends Button
class_name AudioZoneTestMaximumSchizoPartTwo

const MUSIC_TRACK_1: String = "res://Resources/Audio/Music/trimmed_10___What_You_Want_00-40-25_00-41-40.mp3"
const AUDIO_ZONE_SCENE_PATH: String = "res://godot/Test/SchizophrenicGodotTests/AutoGeneratedAudioZoneScene.tscn"

var audio_zone: AudioZone = null


func _ready() -> void:
    self.text = "AudioZone"

    var scene_creator = AudioZoneTestMaximumSchizoPartOne.new()
    scene_creator.create_and_save_audio_zone_scene()

    var audio_zone_scene: PackedScene = load(AUDIO_ZONE_SCENE_PATH) as PackedScene
    if not audio_zone_scene:
        push_error("Failed to load AudioZone scene from: " + AUDIO_ZONE_SCENE_PATH)
        return

    audio_zone = audio_zone_scene.instantiate() as AudioZone
    configure_audio_zone(audio_zone)
    #TODO: NO NO NO NO PLEASE NO, figure out call deference, onready, and scene pregeneration
    call_deferred("_add_audio_zone_to_scene")
    #_add_audio_zone_to_scene()
    self.pressed.connect(_on_button_pressed)


func configure_audio_zone(audio_zone: AudioZone) -> void:
    audio_zone.global_position = self.global_position  # Match button's position
    audio_zone.stream = preload(MUSIC_TRACK_1)
    audio_zone.max_effect_distance = 300.0
    audio_zone.effects_enabled = true
    audio_zone.effect_min_value = 0.0
    audio_zone.effect_max_value = 1.0


func _add_audio_zone_to_scene() -> void:
    get_parent().add_child(audio_zone)


func _on_button_pressed() -> void:
    if audio_zone.playing:
        audio_zone.stop()
    else:
        audio_zone.play()
