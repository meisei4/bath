[target.x86_64-unknown-linux-gnu]
# this is target needs to be specified in the zigbuild arguments
#cargo install --locked cargo-zigbuild
#cargo zigbuild --target x86_64-unknown-linux-gnu
#linker = "zig"
#^^ zigbuild doesnt even run this config.toml file, whatever, i give up

[target.x86_64-apple-darwin]
# on mac:
#cargo build --lib --release
#cargo build --lib
#cargo build --release
#cargo build

# examples:
#fluidsynth -a coreaudio -m coremidi ../godot/Resources/audio/dsdnmoy.sf2
#cargo build --example tests --features tests-only
#cargo run --example tests --features tests-only
linker = "/usr/bin/cc" #redundant for emphasis and could get fucked by env vars or local nix profiles

[target.x86_64-apple-darwin.dev]
#examples:
#cargo build --example raylib_tests
#cargo run --example raylib_tests
linker = "/usr/bin/cc" #redundant again, but only in this target is raylib built?

[target.wasm32-unknown-emscripten]
#cargo +nightly build -Zbuild-std --target wasm32-unknown-emscripten --lib --release
#cargo +nightly build -Zbuild-std --target wasm32-unknown-emscripten --lib

linker = "emcc"
#linker = "C:/Users/pl/emsdk/upstream/emscripten/emcc.bat"
rustflags = [
    "--verbose",
    "-C", "link-args=-g",
    "-C", "link-args=-sSIDE_MODULE=2",
    "-C", "link-args=-pthread",
    "-C", "target-feature=+atomics",
    "-Zlink-native-libraries=no",
    "-C", "link-args=-sDISABLE_EXCEPTION_CATCHING=1",
    "-C", "llvm-args=-enable-emscripten-cxx-exceptions=0"
]